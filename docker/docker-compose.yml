version: "2"

networks:
  fibi-base-net:
    driver: bridge

volumes:
  fibi-users-db-volume:
  fibi-products-db-volume:
  fibi-orders-db-volume:
  fibi-blogs-db-volume:

services:
  ui:
    image: akshaypatil0/ui
    container_name: fibi-ui
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf.template
      - ./nginx-entrypoint.sh:/entrypoint.sh
      # - ./nginx/snippets:/etc/nginx/snippets
      # - ./ssl/authorization.js:/etc/nginx/authorization.js
      # - ./ssl/certs/fibi-server.crt:/etc/ssl/certs/fibi-server.crt
      # - ./ssl/certs/ca.crt:/etc/ssl/certs/ca.crt
      # - ./ssl/certs/fibi-server.key:/etc/ssl/private/fibi-server.key
      # - ./ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem
    ports:
      - ${UI_PORT}:${UI_PORT}
      # - ${MF_NGINX_HTTP_PORT}:${MF_NGINX_HTTP_PORT}
      # - ${MF_NGINX_SSL_PORT}:${MF_NGINX_SSL_PORT}
    command: /entrypoint.sh
    networks:
      - fibi-base-net
    env_file:
      - .env
    # logging:
    #   driver: awslogs
    #   options:
    #     awslogs-group: fibi
    #     awslogs-region: ap-south-1
    #     awslogs-stream-prefix: ui
    depends_on:
      - users
      - products
      - orders
      - blogs

  nats:
    image: nats-streaming:0.17.0
    container_name: fibi-nats
    command: "-p 4222 -m 8222 -hbi 5s -hbt 5s -hbf 2 -SD -cid fibimarket"
    restart: on-failure
    volumes:
      - ./nats/:/etc/nats
    networks:
      - fibi-base-net

  users-db:
    image: mongo
    container_name: fibi-users-db
    restart: on-failure
    networks:
      - fibi-base-net
    volumes:
      - fibi-users-db-volume:/data/users-db

  users:
    image: akshaypatil0/users
    container_name: fibi-users
    depends_on:
      - users-db
    restart: on-failure
    environment:
      NATS_CLUSTER_ID: ${NATS_CLUSTER_ID}
      NATS_CLIENT_ID: ${USERS_NATS_CLIENT_ID}
      NATS_URL: ${NATS_URL}
      MONGO_URI: ${USERS_MONGO_URI}
      JWT_KEY: ${JWT_KEY}
      AWS_ID: ${AWS_ID}
      AWS_SECRET: ${AWS_SECRET}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      PORT: ${USERS_PORT}
    ports:
      - ${USERS_PORT}:${USERS_PORT}
    # logging:
    #   driver: awslogs
    #   options:
    #     awslogs-group: fibi
    #     awslogs-region: ap-south-1
    #     awslogs-stream-prefix: users
    networks:
      - fibi-base-net

  products-db:
    image: mongo
    container_name: fibi-products-db
    restart: on-failure
    networks:
      - fibi-base-net
    volumes:
      - fibi-products-db-volume:/data/products-db

  products:
    image: akshaypatil0/products
    container_name: fibi-products
    depends_on:
      - products-db
    restart: on-failure
    environment:
      NATS_CLUSTER_ID: ${NATS_CLUSTER_ID}
      NATS_CLIENT_ID: ${PRODUCTS_NATS_CLIENT_ID}
      NATS_URL: ${NATS_URL}
      MONGO_URI: ${PRODUCTS_MONGO_URI}
      JWT_KEY: ${JWT_KEY}
      AWS_ID: ${AWS_ID}
      AWS_SECRET: ${AWS_SECRET}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      PORT: ${PRODUCTS_PORT}
    ports:
      - ${PRODUCTS_PORT}:${PRODUCTS_PORT}
    # logging:
    #   driver: awslogs
    #   options:
    #     awslogs-group: fibi
    #     awslogs-region: ap-south-1
    #     awslogs-stream-prefix: products
    networks:
      - fibi-base-net

  orders-db:
    image: mongo
    container_name: fibi-orders-db
    restart: on-failure
    networks:
      - fibi-base-net
    volumes:
      - fibi-orders-db-volume:/data/orders-db

  orders:
    image: akshaypatil0/orders
    container_name: fibi-orders
    depends_on:
      - orders-db
    restart: on-failure
    environment:
      NATS_CLUSTER_ID: ${NATS_CLUSTER_ID}
      NATS_CLIENT_ID: ${ORDERS_NATS_CLIENT_ID}
      NATS_URL: ${NATS_URL}
      MONGO_URI: ${ORDERS_MONGO_URI}
      JWT_KEY: ${JWT_KEY}
      AWS_ID: ${AWS_ID}
      AWS_SECRET: ${AWS_SECRET}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      PORT: ${ORDERS_PORT}
    ports:
      - ${ORDERS_PORT}:${ORDERS_PORT}
    # logging:
    #   driver: awslogs
    #   options:
    #     awslogs-group: fibi
    #     awslogs-region: ap-south-1
    #     awslogs-stream-prefix: orders
    networks:
      - fibi-base-net

  blogs-db:
    image: mongo
    container_name: fibi-blogs-db
    restart: on-failure
    networks:
      - fibi-base-net
    volumes:
      - fibi-blogs-db-volume:/data/blogs-db

  blogs:
    image: akshaypatil0/blogs
    container_name: fibi-blogs
    depends_on:
      - blogs-db
    restart: on-failure
    environment:
      NATS_CLUSTER_ID: ${NATS_CLUSTER_ID}
      NATS_CLIENT_ID: ${BLOGS_NATS_CLIENT_ID}
      NATS_URL: ${NATS_URL}
      MONGO_URI: ${BLOGS_MONGO_URI}
      JWT_KEY: ${JWT_KEY}
      AWS_ID: ${AWS_ID}
      AWS_SECRET: ${AWS_SECRET}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      PORT: ${BLOGS_PORT}
    ports:
      - ${BLOGS_PORT}:${BLOGS_PORT}
    # logging:
    #   driver: awslogs
    #   options:
    #     awslogs-group: fibi
    #     awslogs-region: ap-south-1
    #     awslogs-stream-prefix: users
    networks:
      - fibi-base-net
